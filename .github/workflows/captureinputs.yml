name: Redirect Inputs to File

on:
  workflow_dispatch:
    inputs:
      input1:
        description: 'Input 1'
        required: true
        default: 'Default Value 1'
      input2:
        description: 'Input 2'
        required: true
        default: 'Default Value 2'
      input3:
        description: 'Input 3'
        required: true
        default: 'Default Value 3'

jobs:
  redirect-inputs:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run PowerShell script to dump inputs to file STACK
        shell: pwsh
        run: |
          $Inputs = @"
          ${{ toJson(github.event.inputs) }}
          "@ | ConvertFrom-Json
          
          $InputData = $Inputs | ConvertTo-Json
          Write-Host $InputData
          $InputData | Out-File -FilePath "C:\Temp\inputs.json"
          Get-Content -Path "C:\Temp\inputs.json"
          
      - name: Run PowerShell script to read inputs from file
        shell: pwsh
        run: |
          # Read inputs from inputs.json file
          $InputData = Get-Content -Path "C:\Temp\inputs.json" | ConvertFrom-Json

          # Assign variables from input data
          $Input1 = $InputData.input1
          $Input2 = $InputData.input2
          $Input3 = $InputData.input3

          # Display the values of variables for verification
          Write-Output "Input1: $Input1"
          Write-Output "Input2: $Input2"
          Write-Output "Input3: $Input3"  

      - name: Install jq
        run: choco install jq -y
        if: runner.os == 'Windows

      - name: Read file and set inputs one 
        run: |
          inputs=$(cat C:\Temp\inputs.json | jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]')
          echo "::set-env name=INPUTS::$inputs"

      - name: Use inputs one
        run: echo "Input value for key1 is ${{ github.event.inputs.input1 }}"

      - name: Save JSON to file
        run: |
          @"
          {
            "input1": "mohtashim",
            "input2": "shifa",
            "input3": "maria"
          }
          "@ | Out-File -FilePath C:\Temp\input2.json -Encoding utf8    

      - name: Read file and set inputs two
        run: |
          inputs=$(cat C:\Temp\input2.json | jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]')
          echo "::set-env name=INPUTS::$inputs"

      - name: Use inputs two
        run: echo "Input value for key1 is ${{ github.event.inputs.input1 }}"          
          
          
          
