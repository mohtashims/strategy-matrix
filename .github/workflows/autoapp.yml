name: APPROVE NEW Environment Approval Workflow


on:
  push:
    branches:
      - main

jobs:

  # checkapproval:
  #   name: Check Approval
  #   runs-on: windows-latest
  #   steps:
  #     - name: Get Environment and Approver Info
  #       id: get-info
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{ inputs.aretoken }}
  #         retries: 3
  #         retry-exempt-status-codes: 400,401      
  #         script: |
  #           const runId = "${{ inputs.runId }}";
  #           const repo = "${{ inputs.repo }}";
  #           const owner = "${{ github.event.repository.owner.login }}";
  #           const baseUri = "https://api.github.com/";
  #           const endpoint = "approvals";
  #           const envuri = '${baseUri}/repos/${owner}/${repo}/actions/runs/${runId}/${endpoint}';

  #           const response = await github.request('GET', envuri);
  #           const approvals = response.data;
  #           const meapproval = approvals[0];
  #           const environment = meapproval.environments[0];
  #           const environmentName = environment.name;
  #           const approverName = meapproval.user.login;
      
  #           console.log(`Environment Name: ${environmentName}`);
  #           console.log(`Approver Name: ${approverName}`);

  #           // Set outputs
  #           core.setOutput('environmentName', environmentName);
  #           core.setOutput('approverName', approverName);

   
  deploy:
    name: Deploy to Environments
    runs-on: ubuntu-latest
    needs: auto_approve
    strategy:
      matrix:
        environment: [item1, item2]

    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Add steps to build and package your application

      - name: Deploy to ${{ matrix.environment }} environment
        run: |
          echo "I run post approval for ${{ matrix.environment }}"

      - name: Install Octokit
        run: |
          npm install @octokit/rest
          npm install node-fetch-commonjs
          #npm install node-fetch

      - name: Get Environment and Approver Info
        id: get-info
        uses: actions/github-script@v6
        with:
          #github-token: ${{ inputs.aretoken }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          retries: 3
          retry-exempt-status-codes: 400,401      
          script: |

            const { Octokit } = require("@octokit/rest");
            const nodeFetch = require("node-fetch-commonjs");
            const octokit = new Octokit({
              auth: `token ${process.env.GITHUB_TOKEN}`,
              request: {
                fetch: nodeFetch
              }
            });
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const runId = context.runId;
            const endpoint = 'approvals';
            const envuri = 'https://api.github.com/mohtashims/strategy-matrix/actions/runs/9069778616/approvals';
            

            octokit.request('GET ' + envuri, {})
              .then(response => {
                const approvals = response.data.approvals;
                const approverNames = approvals.map(approval => approval.user.login);
                console.log('Approver names:', approverNames);
              })
              .catch(error => {
                console.error('Error:', error);
              });
            



  auto_approve:
    #needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Auto Approve Deploys
        # you can use any @vN.N.N tag from https://github.com/activescott/automate-environment-deployment-approval/releases
        uses: activescott/automate-environment-deployment-approval@main
        with:
          github_token: ${{ secrets.GH_TOKEN_FOR_AUTO_APPROVING_DEPLOYS }}
          environment_allow_list: |
            item1
            item2
          # The below automatically approves dependabot and anything submitted by the Github user with login "activescott"
          actor_allow_list: |
            dependabot[bot]          
            mohtashims



  # upload:
  #   needs: [deploy, auto_approve]
  #   runs-on: ubuntu-latest
  #   environment: ${{ matrix.environment }}
  #   strategy:
  #     matrix:
  #       environment: ${{ fromJson(needs.deploy.outputs.mymatrix) }}
  #   steps:
  #     - run: echo '${{ matrix.environment }}'            
